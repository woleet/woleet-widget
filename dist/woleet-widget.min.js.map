{"version":3,"sources":["woleet-widget.js"],"names":["root","Widget","hash","head","init","inputContainer","mainTextZone","text","removeClass","body","widget","dropZone","show","hashZone","hashProgessContainer","percentage","progressBar","infoZone","icon","$touch","clear","subTextZone","byTextZone","signTextZone","warnTextZone","day","month","year","hour","minutes","setInputFile","date","getMonth","getFullYear","resetText","join","receipt","file","this","files","setVue","setProgress","e","p","progress","Number","isNaN","toFixed","style","width","formatDate","parseReceiptFile","getDate","woleet","verify","DAB","state","Error","res","code","getHours","getMinutes","err","woleetDAB","WoleetDAB","result","length","console","trace","hasOwnProperty","message","value","start","hasher","on","r","forceReceipt","getErrorMessage","detail","sub","main","hide","signature","i","identityVerificationStatus","pubKey","s","timestamp","split","exec","toString","timeZone","identityURL","link","vue","addClass","cancel","attr","reject","FileReader","reader","readAsText","cancelHash","reset","$","element","classes","Element","createElement","TypeError","target","rts","self","def","name","Object","defineProperty","enumerable","val","setAttribute","removeAttribute","Array","isArray","forEach","classList","remove","add","innerText","url","props","prop","type","listener","capture","addEventListener","appendChild","toDom","log","arguments","undefined","d","document","c","logo","input","call","Hasher","onloadend","widgets","resolve","parse","window"],"mappings":"cAAC,SAAUA,GAMP,QAASC,GAAOC,GAyGZC,QAAAC,KACAD,IACAA,EAAAE,eAA4BC,aAAWC,KAAA,2BACvCJ,EAAAK,aAAsB,YAAW,UAC3BC,EAAOC,OA+BTC,EAASC,OA7BPC,EAAAA,OACNA,EAASC,MAAAA,OACTD,EAASE,OAAAA,OACHC,EAAAA,QAAAA,OAGNC,QAASC,KACTD,EAASX,eAAea,aAAcC,QACtCH,EAASI,eAAcF,YAAeC,QACtCH,EAASK,aAAaH,QACtBF,EAASM,YAAeJ,QACxBF,EAASO,aAAeL,QA+BpBF,EAASO,aAAaJ,QA7BpBT,EAAAA,WAAgBA,OAMtBP,QAAAA,GAAAA,GA+BI,GAAIqB,OAAAA,GAAKC,MAAAA,GAAOC,MAAAA,GAAMC,MAAAA,GAAMC,MAAAA,EAtB5BZ,OANAf,GAAM4B,EAAAA,UA+BNJ,EAAQK,EAAKC,WA7BjBL,EAASvB,EAAO6B,cACZC,EAAAA,EAAAA,WACAvB,EAASN,EAAAA,cAETY,EAAAS,EAAA,EAAAC,GAAAQ,KAAA,KAAA,KAAAP,EAAAC,GAAAM,KAAA,KAKAhC,QAAKiC,KACR,GAAAC,GAAAC,KAAAC,MAAA,EA+BG,IAAKF,EAAL,CA1BApB,KAAAA,MAASX,KAGAkB,SAATP,EAASO,OAATgB,EAAA,OAEH,IAAAC,GAAA,SAAAC,GA+BO,GAAIC,GAAkB,IAAbD,EAAEE,QA7BnBC,QAAAC,MAAAH,KAAAA,EAAA,GA+BQA,EAAIA,EAAEI,QAAQ,GACd/B,EAAYgC,OAAOC,MAAON,EAAI,MA7BtC9B,EAASqC,WAAiB3C,KAAA,cAAAoC,EAAA,KACtB,IAAA,gBAAsBf,EAAAA,MAAMC,EAAAA,WAmCxBsB,EAAiBd,GAjCfN,KAAKqB,SAAAA,GAAAA,MAAXC,QAAAC,OAAAC,IAAAC,EAAAtD,KAAAkC,EAAAK,KACQV,KAAKC,SAAAA,GACDC,GAAZ,aAAYA,EAAAA,KAAZ,KAAA,IAAAwB,OAAAC,EAAAC,KACYC,GAAAA,YAAZF,GACU3B,EAAK8B,MAAL,SAEFpC,MAAKC,SAAAA,GAChBc,EAAA,QAAAsB,SAKOzB,CAAAA,GAmDS0B,GAAT,SAAmB7D,GAjCvBmD,OAAAC,OAAAU,UAAA9D,EAAAuC,GACUe,KAAN,SAAAS,GACO,IAAPA,EAAAC,OAMQ,KAAc,IAAdT,OAAA,eALRN,GAAAK,MACU,MAAaH,IAAOC,GAAPW,EAAwB/D,EACrC,IAAS,aAARwD,EAAQC,KAAA,KAAA,IAAAF,OAAAC,EAAAC,KACPnB,GAAa,YAAYkB,KAK7BlB,MAAO,SAAAsB,GAInBK,QAAAC,MAAAN,GACKA,EAAAO,eAAA,SAAA,iBAAAP,EAAAQ,SAiBQP,EAATP,MAASO,cACET,EAAOU,iBAIFxB,EAAMkB,QAAMO,KApB5BzB,GAAO,WAhCX,gBAAAH,IACKkC,EAAQrE,KAAbmC,EAmCQ0B,EAAUP,EAAMtD,QAhCpBsD,EAAAgB,MAAgBnC,GAmCZoC,EAAOC,GAAG,WAAYjC,GAjCxBA,EAAAA,GAAc,SAAdA,SAAAA,GACOC,EAAEE,KAAW+B,EAAAV,OAClBpB,EAAAW,EAAiBb,MACfI,GAANH,SAAA,SAoDY,QAAAgC,KACAT,EAAAA,MAAAA,cACA3B,EAAA,gBACIgB,EAAAA,eAAAA,aAAcjD,KAAA,uBACdiC,EAAAA,eAAAA,YAAOpB,QAIV,QAAAyD,GAAAf,GACJA,YAtBLL,SAuBHK,EAzCAA,EAAAQ,QAED9B,IAAAA,KAuDJ,QAAQsB,GArDJ,IAAA,eACIN,EAAAA,KAAA,yBACAO,EAAAA,IAAAA,sFACH,MACGU,KAAAA,uBACAA,EAAAA,KAAU,kDACVA,EAAAA,IAAA,iEACIjB,MACAO,KAAAA,uBACAtB,EAAAA,KAAAA,wCACHqC,EAJDC,IAAA,mDAKH,MA2BJ,KAAA,uBACJD,EAAAE,KAAA,uCA6BWF,EAAOC,IAAM,qEA3BhBH,MACLpB,KAAMA,kCACCsB,EAAAE,KAAP,uCACArE,EAASN,IAAAA,0EACTM,MACH,KAAA,kCA6BWmE,EAAOE,KAAO,uCA3BjBH,EAAAA,IAAgBf,0DACjBA,MACAA,KAAAA,yBACHgB,EAAAE,KAAA,uCACKF,EAANC,IAAA,wDACQjB,MACJ,KAAK,uBACDgB,EAAOE,KAAO,uCACdF,EAAOC,IAAM,2DACb,MACJ,KAAK,eACDD,EAAOE,KAAO,wBACdF,EAAOC,IAAM,yDACb,MACJ,KAAK,4BACDD,EAAOE,KAAO,4BACdF,EAAOC,IAAM,wEACb,MACJ,KAAK,kCACDD,EAAOE,KAAO,yBACdF,EAAOC,IAAM,8DACb,MACJ,SACID,QAAOE,MAAO,kBAAAlB,GACdgB,EAAOC,KAAMjB,EACbgB,EAAAC,IAAA,kBAGAD,MAAAA,GAGAA,QAAAA,GAAAA,EAAOE,GACPF,OAAAA,GACA,IAAA,YACJ5C,IACI4C,EAAOE,aAAO,UACdF,EAAOC,OACPpE,EAAAsE,OACJpE,EAAKoE,OACDH,EAAAA,OAAAG,MACAH,IAAAA,GAAAR,EAAalC,QAAA8C,UACbC,EAAAb,EAAAc,2BACCC,EAAAC,EAAAA,EAAAD,OAAL,KACIP,EAAA5B,EAAcoB,EAAAiB,WAAdC,MAAA,KACAV,EAAa,gBAAAW,KAAAnB,EAAAiB,UAAAG,YAAA,EACbzE,GAAAX,aAAAC,MAAA8E,EAAA,SAAA,eAAA,OAAAtD,EAAA,IACJd,EAAKI,YAAAd,KAAA,MAALwB,EAAA,GAAA,IAAA4D,GACIb,GAAOE,EAAPY,aAAcT,GAAd,aAAcA,EAAAxB,MACdmB,EAAavD,aAAAsE,KAAAP,EAAAM,aACb3E,EAAAK,WAAAV,QAEQwD,GACRU,EAAAvD,aAAAhB,KAAAuE,GAAAO,GACAP,EAAaxD,WAAAV,QAhDrBK,EAAAK,WAAA2D,OAiFYE,GAAKA,EAAExB,MAAmB,aAAXwB,EAAExB,MA3BjBmC,EAAKxB,aAAS/D,KAAduF,6BAAcX,EAAAxB,KAAdmC,KAER7E,EAAK8E,SAAL,aACI7D,EAAAA,KAAAA,YAAAA,GACAjB,EAAAA,MAAST,OACTS,EAAAA,QAAAL,MACAD,MACAE,KAAAA,eACAV,IACAc,EAAUqD,OACV3D,EAAU2D,OACVzD,EAAMwE,OACNlF,EAAM4B,OAAOmB,OACb/C,EAAMwF,QAAAA,OACN1E,EAASX,eAAaC,aAAiBA,KAAA,0BACvCU,EAASI,eAAYd,YAAawB,KAAR,qBAC1B5B,EAAImF,MAAOM,MACP3E,MACAA,KAAAA,QACHiB,IAEGjB,EAAAA,aAASM,cACTN,EAAAA,OACHN,EAAMsE,OACHhE,EAAAA,OACHd,EAAA6F,OAAAf,OA4BmB,gBAAhBzB,EAAMA,OAAyBrD,EAAKiC,QAAQxB,MA1BhD,IAAIuE,GAAOxB,EAAQW,EACfrD,GAAAA,aAASO,KAAajB,EAAtByE,MACH/D,EAAAI,YAAAd,KAAAuE,EAAAC,KACD9D,EAAS8E,SAAS,SAClBpF,EAAAA,MAASsF,MACT9F,MACAA,KAAAA,UACA+B,IACJ/B,EAAK6F,OAAApF,OACDsB,EAAAA,QAAAA,OACAjB,EAASgE,OACTtE,EAASC,OACTC,EAASoE,MACT9E,MACAA,KAAAA,OACAQ,QACAA,KAKAM,QAAAA,GAAST,GACTS,MAAAA,IAAAA,SAASL,SAAAA,EAATsF,GACAvF,GAAAA,GAASsE,GAATkB,WACAtF,GAAAA,UAAA,SAAA6B,GACAvC,IAEI2E,EAAAA,KAASD,MAAAA,EAAAA,OAAgBP,SAC7BrD,MAASX,GACTW,EAASI,GAAAA,OAAYd,2BAGrB6F,EAAAC,WAAAjE,KAIAjC,QAAAA,KACAc,EAAAA,QACAN,EAAAA,KAAAA,KACAE,EAAAA,MAAAA,UAGJ,QAAAyF,KACIlG,EAAAA,SACAmG,IApYZ,GAAIrG,GAAwB,gBAATA,GADnB,KAAA,IAAAuD,OAAA,yBAIA,IAAAD,IACMA,MAAAA,UACFA,KAAAA,MA2BEgD,EAAI,QAAJA,GAAcC,EAASC,GAEzB,GAAID,YAAmBE,cAGnB,CAAA,GAAuBC,gBAAnBH,GAIP,KAAA,IAAAI,UAHG,IAAIH,GAASD,SAAQV,cAASW,EAC3BA,IAAAD,EAAAV,SAAAW,GAKP,GAAAI,GAAAL,EAIMM,EAAMzE,KAAAyE,EAAMC,WAAAA,MAANA,IAAZC,EAAA,SAAAC,EAAA3C,GAAA,MAAA4C,QAAAC,eAAAJ,EAAAE,GAAAG,YAAA,EAAA9C,MAAAA,IACY0C,GAAA,SAAiBE,WAAAA,MAAOC,KAAxBH,EAAZ,OAAA,SAAAhB,EAAAqB,GAAA,MAAAP,GAAAO,EAAAR,EAAAS,aAAAtB,EAAAqB,GAAAR,EAAAU,gBAAAvB,MAIAgB,EAAI,cAAe,SAACvE,GAAD,MAAOqE,GAAIU,MAAMC,QAAQhF,GAAKA,EAAEiF,QAAQ,SAAAjF,GAAA,MAAKoE,GAAOc,UAAUC,OAAOnF,KAAMoE,EAAOc,UAAUC,OAAOnF,MAFtHuE,EAAI,WAAU,SAAAvE,GAAA,MAAAqE,GAAAU,MAAAC,QAAAhF,GAAAA,EAAAiF,QAAA,SAAAjF,GAAA,MAAAoE,GAAAc,UAAAE,IAAApF,KAAAoE,EAAAc,UAAAE,IAAApF,MAAAuE,EAAA,OAAMH,SAAAA,EAANgB,GAAMhB,MAANC,GAAAe,EAAAhB,EAAAiB,WAAAxH,EAAAuG,EAAAiB,UAAAxH,KAAA0G,EAAd,OAAA,SAAAe,GAAA,MAAAjB,GAAAC,EAAAzG,KAAAyH,GAAA/B,KAAA,OAAA+B,MACAf,EAAI,QAAQ,WAAA,MAAAF,GAACd,EAAMqB,KAAP,IAAAN,EAAAf,KAAA,OAAA,SAAAgB,EAAA,OAAeF,WAAAA,MAAIO,GAAMR,YAAOS,YAAhCN,EAAZ,OAAA,WAAA,MAAAD,GAAAjB,SAAA,YACAkB,EAAI,QAAA,SAAAgB,GAAe,GAAAR,MAAOV,QAAUW,GAAuB,MAAKZ,GAAAA,IAAOc,SAAAA,GAAAA,MAAUC,GAAOnF,MAA7BC,IAA3D,IAAA,gBAAAsF,GAAA,MAAAnB,GAAA9D,MAAAiF,EACgB,KAAOlB,GAAIU,KAAMC,GAAuDZ,EAAOc,MAAPM,GAAxED,EAAAC,KACJjB,EAAZ,KAAA,SAAAkB,EAAAC,EAAAC,GAAA,MAAAtB,GAAAD,EAAAwB,iBAAAH,EAAAC,EAAAC,MACApB,EAAI,QAAQ,WAAA,GAAAjH,GAAagH,EAAKzG,QAA9B,KAAA,GAAAmC,KAAAsE,GACI,GAASA,EAAA3C,eAAA3B,OAAMqE,YAAcP,IAAjC,IACYxG,EAAAuI,YAAAvB,EAAAtE,GAAA8F,SAAA,MAAWhI,GAAvB2D,QAAAsE,IAAA/F,EAAAoB,GACA,MAAA9D,MASY8G,EAAAA,WAAA,GAAAA,GAAA4B,UAAAxE,OAAA,OAAAyE,KAAAD,UAAA,GAAAA,UAAA,GAAA5B,MAAO9D,EAAP0F,UAAA,GACHE,EAAA,GAAApC,GAAAqC,SAAAjC,cAAAlE,GAER,OADIoG,IAAAF,EAAA7C,SAAA+C,GAVLF,GAaA3B,EAAA9F,EAAa,MAAM,UACfhB,EAAIH,EAAOgH,KAAKF,EAAhB,MAAA,OACA3G,GAAA4I,KAAA5H,EAAA,MAAA,eACIhB,EAAAoG,MAAApF,EAAK6F,OAAK3C,QAAe3B,cAAI,cAAAgC,GAAA,QAAA6B,GAC7BpG,EAAA6F,OAAA7E,EAAI,OAAA,SAAiB,cAAA,cAAAuD,GAAA,QAAA4B,GACrBnG,EAAAiC,QAAAjB,EAAI,UAAA,iBAAA,cAAAuD,GAAA,QAAAE,GAAArE,KAAA,eACAP,IAAAA,GAAAA,EAAAA,KAAKuI,EAAYvB,MAAQwB,QAEzBrE,EAAAA,EAAAA,SAAeL,EAAf,MAAA,WACHjD,GAAAC,qBAAAK,EAAA,MAAA,wBACJN,EAAAE,WAAAI,EAAA,QAAAZ,KAAA,gBACD,IAAAS,GAAAH,EAAAC,qBAAAE,YAAAG,EAAA,MAAA,eApDRF,EAAAR,EAAAQ,SAAAE,EAAA,MAAA,WAkFAF,GAASC,KAAOC,EAAO,MAAO,cA1B9BF,EAAAX,aAAAa,EAAA,MAAA,QA4BAF,EAASI,YAAcF,EAAO,OAAQ,OAAQ,UAC9CF,EAASK,WAAaH,EAAO,QAAS,OAAQ,YAAYZ,KAAK,MAC/DU,EAASM,aAAeJ,EAAO,KAAM,OAAQ,YAC7CF,EAASO,aAAeL,EAAO,OAAQ,OAAQ,UAAW,QA1BzB,IAAAR,GAAAF,EAAAE,SAAAQ,EAAA,MAAA,oBAAAR,GAAAN,eAAAc,EAAA,OA8BjCR,EAASN,eAAeC,aAAea,EAAO,MAAO,QA7BjDR,EAAIiI,eAAUC,YAASjC,EAAvB,OAAA,OAAA,UACAjG,EAAAN,eAAO2I,MAAA7H,EAAA,SAAA,WAAA,cAAA8E,KAAA,OAAA,QAAAvB,GAAA,SAAA5C,GAEV1B,IAGKM,GAAAA,EAAgBuI,MAAO1G,OAA7BrC,IAuCIC,IAAAA,GAAW8E,GAAX5B,QAAAhB,KAAA6G,MAuRJ,OAAOxI,GAAO8H,QAxBNK,SAAAP,iBAAa,mBAAb,WAEI,IAAA,GADJlC,GAAAA,SAAO+C,uBAAmB,iBACtBhE,EAAA,EAAIA,EAAAiE,EAAAlF,OAAAiB,IAAA,CACA,GAAAzC,GAAA0G,EAAAjE,GACAkE,EAAAA,EAAAA,aAAaC,YAChB5G,GAAA6F,YAAC,GAAOzE,GAAK5D,OAIlBkG,EAAAA,OAAAA,GAEPmD","file":"woleet-widget.min.js","sourcesContent":["(function (root) {\n\n    /**\n     * @param [hash]\n     * @constructor\n     */\n    function Widget(hash) {\n\n        // Check parameter\n        if (hash && typeof hash !== 'string')\n            throw new Error('Invalid parameter type');\n\n        // Init state\n        const state = {\n            state: 'initial',\n            hash: null\n        };\n\n        /**\n         * @typedef {{\n         *      target:function(),\n         *      addClass: function(string[]|string):$,\n         *      removeClass: function(string[]|string):$,\n         *      show: function():$,\n         *      hide: function():$,\n         *      text: function(text: string, add?: boolean):$,\n         *      link: function(link: string):$,\n         *      clear: function():$,\n         *      style: function(props: object),\n         *      attr: function(attr: string, val: *),\n         *      on: function(type: string, listener:function, capture: boolean),\n         *      toDom: function()\n         *      }} $\n         */\n\n        /**\n         * @description \"virtual\" DOM element Object\n         * @param {Element|string} element\n         * @param {string|string[]} [classes]\n         * @private\n         */\n        const $ = function (element, classes) {\n\n            if (element instanceof Element) {\n\n            } else if (typeof element === 'string') {\n                let element = document.createElement(element);\n                if (classes) element.addClass(classes);\n            } else {\n                throw new TypeError\n            }\n\n            const target = element;\n            /**\n             * @type {$}\n             */\n            const self = this;\n            const rts = () => self;\n            const def = (name, value) => Object.defineProperty(self, name, {enumerable: false, value});\n\n            def('target', () => target);\n            def('attr', (attr, val) => rts(val ? target.setAttribute(attr, val) : target.removeAttribute(attr)));\n            def('removeClass', (e) => rts(Array.isArray(e) ? e.forEach(e => target.classList.remove(e)) : target.classList.remove(e)));\n            def('addClass', (e) => rts(Array.isArray(e) ? e.forEach(e => target.classList.add(e)) : target.classList.add(e)));\n            def('text', (text, add) => rts(add ? target.innerText += text : target.innerText = text));\n            def('link', (url) => rts(self.text(url).attr('href', url)));\n            def('clear', () => rts(self.text(''), self.attr('href', null)));\n            def('show', () => self.removeClass('hidden'));\n            def('hide', () => self.addClass('hidden'));\n            def('style', (props) => {\n                if (Array.isArray(props)) {\n                    return props.map((p) => target.style[p])\n                }\n                else if (typeof props === 'string') return target.style[props];\n                else {\n                    for (let prop in props) {\n                        //noinspection JSUnfilteredForInLoop\n                        target.style[prop] = props[prop];\n                    }\n                }\n            });\n            def('on', (type, listener, capture) => rts(target.addEventListener(type, listener, capture)));\n            def('toDom', () => {\n                let root = self.target();\n                for (let e in self) {\n                    if (!self.hasOwnProperty(e)) continue;\n                    if (!e instanceof $) continue;\n                    try {\n                        root.appendChild(self[e].toDom())\n                    } catch (err) {\n                        console.log(e, err);\n                    }\n                }\n                return root;\n            });\n        };\n\n        /**\n         * @description \"virtual\" DOM element factory\n         * @param {String} [e] element type\n         * @param {String|Array<String>} [c] class/classes\n         */\n        const $touch = (e = 'div', c) => {\n            let d = new $(document.createElement(e));\n            if (c) d.addClass(c);\n            return d;\n        };\n\n        // Build the \"virtual\" widget\n        const widget = $touch('div', 'widget');\n        const head = widget.head = $touch('div', 'head');\n        head.logo = $touch('div', 'woleet-logo');\n        head.reset = $touch('div', ['reset', 'mini-button', 'clickable']).on('click', reset);\n        head.cancel = $touch('div', ['cancel', 'mini-button', 'clickable']).on('click', cancelHash);\n        head.receipt = $touch('button', ['receipt-button', 'clickable']).on('click', forceReceipt).text('Drop receipt');\n        const body = widget.body = $touch('div', 'body');\n\n        const hashZone = body.hashZone = $touch('div', 'hashZone');\n        hashZone.hashProgessContainer = $touch('div', 'progressBarContainer');\n        hashZone.percentage = $touch('span').text('Hashing... 0%');\n        const progressBar = hashZone.hashProgessContainer.progressBar = $touch('div', 'progressBar');\n\n        const infoZone = body.infoZone = $touch('div', 'infoZone');\n        infoZone.icon = $touch('div', 'infoStatus');\n        infoZone.mainTextZone = $touch('div', 'text');\n        infoZone.subTextZone = $touch('div', ['text', 'small']);\n        infoZone.byTextZone = $touch('span', ['text', 'x-small']).text('by');\n        infoZone.signTextZone = $touch('a', ['text', 'x-small']);\n        infoZone.warnTextZone = $touch('div', ['text', 'x-small', 'warn']);\n\n        const dropZone = body.dropZone = $touch('div', 'dropZoneContainer');\n        dropZone.inputContainer = $touch('div');\n        dropZone.inputContainer.mainTextZone = $touch('div', 'text');\n        dropZone.inputContainer.subTextZone = $touch('div', ['text', 'small']);\n        dropZone.inputContainer.input = $touch('input', ['dropZone', 'clickable']).attr('type', 'file').on('change', setInputFile);\n\n        init();\n\n        // Simulate a drop if hash is provided\n        if (hash) setInputFile.call({files: [hash]});\n\n        function init() {\n            resetText();\n            dropZone.inputContainer.mainTextZone.text('Drop the file to verify');\n            infoZone.removeClass(['validated', 'error']);\n            infoZone.hide();\n            dropZone.show();\n            hashZone.hide();\n            head.reset.hide();\n            head.cancel.hide();\n            head.receipt.hide();\n        }\n\n        function resetText() {\n            dropZone.inputContainer.mainTextZone.clear();\n            dropZone.inputContainer.subTextZone.clear();\n            infoZone.mainTextZone.clear();\n            infoZone.subTextZone.clear();\n            infoZone.signTextZone.clear();\n            infoZone.warnTextZone.clear();\n            infoZone.byTextZone.hide();\n        }\n\n        /**\n         * @param {Date} date\n         */\n        function formatDate(date) {\n            let day, month, year, hour, minutes;\n\n            day = date.getDate();\n            month = date.getMonth();\n            year = date.getFullYear();\n            hour = date.getHours();\n            minutes = date.getMinutes();\n\n            return [day, month + 1, year].join('/') + ' ' + [hour, minutes].join(':');\n        }\n\n        const hasher = new woleet.file.Hasher;\n\n        function setInputFile() {\n            let file = this.files[0];\n            if (!file) return;\n\n            // Reset input\n            //noinspection JSUnusedGlobalSymbols\n            this.value = null;\n\n            // Set default vue\n            if (state.state === 'done') setVue('init');\n\n            const setProgress = (e) => {\n                let p = (e.progress * 100);\n                if (Number.isNaN(p)) p = 0;\n                p = p.toFixed(0);\n                progressBar.style({width: p + '%'});\n                hashZone.percentage.text('Hashing... ' + p + '%')\n            };\n\n            // We need a receipt to verify the hash|file\n            if (state.state === 'needReceipt') {\n                setVue('pending');\n                parseReceiptFile(file)\n                    .then((receipt) => woleet.verify.DAB(state.hash, receipt, setProgress))\n                    .then((res) => {\n                        if (res.code !== 'verified') throw new Error(res.code);\n                        setVue('woleet-ok', res);\n                        state.state = 'done';\n                    })\n                    .catch((err) => {\n                        setVue('error', err);\n                    })\n            }\n\n            // We just entered a new hash|file to verify\n            else {\n\n                setVue('pending');\n\n                if (typeof file === 'string') {\n                    state.hash = file;\n                    woleetDAB(state.hash);\n                } else {\n                    hasher.start(file);\n                    hasher.on('progress', setProgress);\n                    hasher.on('result', (r) => {\n                        state.hash = r.result;\n                        woleetDAB(state.hash);\n                        setProgress({progress: 0});\n                    })\n                }\n\n                function woleetDAB(hash) {\n                    woleet.verify.WoleetDAB(hash, setProgress)\n                        .then((result) => {\n                            if (result.length) {\n                                state.state = 'done';\n                                const res = result[0];\n                                if (res.code !== 'verified') throw new Error(res.code);\n                                setVue('woleet-ok', res);\n                            }\n                            else throw new Error('need-receipt');\n                        })\n                        .catch((err) => {\n                            // As we use cross-domain, it is difficult to know where the error come from,\n                            // so we guess that the Woleet API isn't available and set state to need-receipt\n                            // if the error came from network\n                            console.trace(err);\n                            if (err.hasOwnProperty('code') || err.message === 'need-receipt') {\n                                state.state = 'needReceipt';\n                                setVue('need-receipt');\n                            }\n                            else {\n                                setVue('error', err);\n                            }\n                        })\n                }\n            }\n        }\n\n        function forceReceipt() {\n            state.state = 'needReceipt';\n            setVue('need-receipt');\n            dropZone.inputContainer.mainTextZone.text('Drop file\\'s receipt');\n            dropZone.inputContainer.subTextZone.clear();\n        }\n\n        function getErrorMessage(err) {\n            if (err instanceof Error) {\n                err = err.message;\n            }\n            const detail = {};\n            switch (err) {\n                case 'need-receipt':\n                    detail.main = 'File unknown to Woleet';\n                    detail.sub = 'The receipt cannot be retreived from Woleet: you must provide it to verify this file';\n                    break;\n                case 'target_hash_mismatch':\n                    detail.main = 'The provided receipt is not meant for this file';\n                    detail.sub = 'The receipt\\'s target_hash attribute doesn\\'t match the file hash';\n                    break;\n                case 'unable_to_parse_json':\n                    detail.main = 'The provided receipt cannot be parsed';\n                    detail.sub = 'The file you provided doesn\\'t look like a receipt';\n                    break;\n                case 'merkle_root_mismatch':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'The receipt\\'s merkle_root attribute does not match the proof result';\n                    break;\n                case 'non_sha256_target_proof_element':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'An attribute in the proof (parent or left or right) in not a SHA256 hash';\n                    break;\n                case 'invalid_parent_in_proof_element':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'A parent in the proof does not match SHA256(left+right).';\n                    break;\n                case 'invalid_receipt_format':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'The proof miss an attribute (parent or left or right).';\n                    break;\n                case 'invalid_target_proof':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'The receipt does not conform to the Chainpoint 1.x format';\n                    break;\n                case 'tx_not_found':\n                    detail.main = 'Transaction not found';\n                    detail.sub = 'The transaction targeted by the receipt cannot be found';\n                    break;\n                case 'invalid_receipt_signature':\n                    detail.main = 'Invalid receipt signature';\n                    detail.sub = 'The provided receipt is packed with a signature field witch is invalid';\n                    break;\n                case 'error_while_getting_transaction':\n                    detail.main = 'Cannot get transaction';\n                    detail.sub = 'There was an error while getting the transaction (try again)';\n                    break;\n                default:\n                    console.trace('unexpected case', err);\n                    detail.main = err;\n                    detail.sub = 'unexpected case';\n                    break;\n            }\n            return detail;\n        }\n\n        function setVue(vue, message) {\n            switch (vue) {\n                case 'woleet-ok':\n                    resetText();\n                    infoZone.removeClass(['error']);\n                    infoZone.show();\n                    dropZone.hide();\n                    hashZone.hide();\n                    head.cancel.hide();\n                    const s = message.receipt.signature;\n                    const i = message.identityVerificationStatus;\n                    const pubKey = s ? s.pubKey : null;\n                    const date = formatDate(message.timestamp).split(' ');\n                    const timeZone = /.*(GMT.*\\)).*/.exec(message.timestamp.toString())[1];\n                    infoZone.mainTextZone.text(`${pubKey ? 'Signed' : 'Timestamped'} on ${date[0]}`);\n                    infoZone.subTextZone.text('at ' + date[1] + ' ' + timeZone);\n                    if (s && s.identityURL && i && i.code === 'verified') {\n                        infoZone.signTextZone.link(s.identityURL);\n                        infoZone.byTextZone.show();\n                    }\n                    else if (pubKey) {\n                        infoZone.signTextZone.text(`${pubKey}`);\n                        infoZone.byTextZone.show();\n                    } else {\n                        infoZone.byTextZone.hide();\n                    }\n\n                    if (i && i.code && i.code !== 'verified') {\n                        infoZone.warnTextZone.text(`Cannot validate identity (${i.code})`)\n                    }\n                    infoZone.addClass('validated');\n                    dropZone.attr('disabled', true);\n                    head.reset.show();\n                    head.receipt.show();\n                    break;\n                case 'need-receipt':\n                    resetText();\n                    infoZone.hide();\n                    dropZone.show();\n                    hashZone.hide();\n                    head.cancel.hide();\n                    head.receipt.hide();\n                    dropZone.inputContainer.mainTextZone.text('File unknown to Woleet');\n                    dropZone.inputContainer.subTextZone.text('Drop it\\'s receipt');\n                    head.reset.show();\n                    break;\n                case 'error':\n                    resetText();\n                    infoZone.removeClass(['validated']);\n                    infoZone.show();\n                    dropZone.hide();\n                    hashZone.hide();\n                    head.cancel.hide();\n                    if (state.state === 'needReceipt') head.receipt.show();\n                    let detail = getErrorMessage(message);\n                    infoZone.mainTextZone.text(detail.main);\n                    infoZone.subTextZone.text(detail.sub);\n                    infoZone.addClass('error');\n                    head.reset.show();\n                    break;\n                case 'pending':\n                    resetText();\n                    head.cancel.show();\n                    head.receipt.hide();\n                    infoZone.hide();\n                    dropZone.hide();\n                    hashZone.show();\n                    break;\n                case 'init':\n                default:\n                    init();\n                    break;\n            }\n        }\n\n        function parseReceiptFile(receipt) {\n            return new Promise((resolve, reject) => {\n                let reader = new FileReader();\n                reader.onloadend = (e) => {\n                    try {\n                        //noinspection JSUnresolvedVariable\n                        resolve(JSON.parse(e.target.result));\n                    } catch (err) {\n                        reject(new Error('unable_to_parse_json'));\n                    }\n                };\n                reader.readAsText(receipt);\n            });\n        }\n\n        function reset() {\n            setVue('init');\n            state.hash = null;\n            state.state = 'initial'\n        }\n\n        function cancelHash() {\n            hasher.cancel();\n            reset();\n        }\n\n        return widget.toDom()\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        let widgets = document.getElementsByClassName(\"woleet-widget\");\n        for (let i = 0; i < widgets.length; i++) {\n            let e = widgets[i];\n            let hash = e.getAttribute(\"data-hash\");\n            e.appendChild(new Widget(hash));\n        }\n    });\n\n    root.Widget = Widget;\n\n}(window));"]}