{"version":3,"sources":["woleet-widget.js"],"names":["root","Widget","hash","head","cancel","body","dropZone","inputContainer","mainTextZone","text","hashZone","hashProgessContainer","percentage","progressBar","reset","hide","infoZone","subTextZone","signTextZone","$touch","warnTextZone","formatDate","date","day","setInputFile","call","files","init","getDate","resetText","removeClass","getMinutes","month","year","join","hour","minutes","state","setVue","setProgress","e","progress","p","width","getMonth","file","woleet","verify","DAB","receipt","then","res","catch","err","parseReceiptFile","result","code","length","Error","console","message","Number","isNaN","toFixed","style","woleetDAB","detail","main","sub","hasher","getErrorMessage","trace","vue","show","log","signature","identityVerificationStatus","pubKey","s","signee","identityURL","i","timestamp","split","timeZone","exec","toString","addClass","attr","reject","FileReader","target","cancelHash","$","element","classes","Element","createElement","TypeError","rts","this","self","def","name","value","Object","defineProperty","enumerable","Array","isArray","forEach","classList","remove","add","innerText","props","prop","val","setAttribute","removeAttribute","type","listener","capture","addEventListener","toDom","d","c","widget","appendChild","on","icon","document","input","Hasher","reader","resolve","widgets","getAttribute"],"mappings":"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","file":"woleet-widget.min.js","sourcesContent":["(function (root) {\n\n    /**\n     * @param [hash]\n     * @constructor\n     */\n    function Widget(hash) {\n\n        // Check parameter\n        if (hash && typeof hash !== 'string')\n            throw new Error('Invalid parameter type');\n\n        // Init state\n        const state = {\n            state: 'initial',\n            hash: null\n        };\n\n        /**\n         * @typedef {{\n         *      target:function(),\n         *      addClass: function(string[]|string):$,\n         *      removeClass: function(string[]|string):$,\n         *      show: function():$,\n         *      hide: function():$,\n         *      text: function(text: string, add?: boolean):$,\n         *      style: function(props: object),\n         *      attr: function(attr: string, val: *),\n         *      on: function(type: string, listener:function, capture: boolean),\n         *      toDom: function()\n         *      }} $\n         */\n\n        /**\n         * @description \"virtual\" DOM element Object\n         * @param {Element|string} element\n         * @param {string|string[]} [classes]\n         * @private\n         */\n        const $ = function (element, classes) {\n\n            if (element instanceof Element) {\n\n            } else if (typeof element === 'string') {\n                let element = document.createElement(element);\n                if (classes) element.addClass(classes);\n            } else {\n                throw new TypeError\n            }\n\n            const target = element;\n            /**\n             * @type {$}\n             */\n            const self = this;\n            const rts = () => self;\n            const def = (name, value) => Object.defineProperty(self, name, {enumerable: false, value});\n\n            def('target', () => target);\n            def('removeClass', (e) => rts(Array.isArray(e) ? e.forEach(e => target.classList.remove(e)) : target.classList.remove(e)));\n            def('addClass', (e) => rts(Array.isArray(e) ? e.forEach(e => target.classList.add(e)) : target.classList.add(e)));\n            def('text', (text, add) => rts(add ? target.innerText += text : target.innerText = text));\n            def('show', () => self.removeClass('hidden'));\n            def('hide', () => self.addClass('hidden'));\n            def('style', (props) => {\n                if (Array.isArray(props)) {\n                    return props.map((p) => target.style[p])\n                }\n                else if (typeof props === 'string') return target.style[props];\n                else {\n                    for (let prop in props) {\n                        //noinspection JSUnfilteredForInLoop\n                        target.style[prop] = props[prop];\n                    }\n                }\n            });\n            def('attr', (attr, val) => rts(val ? target.setAttribute(attr, val) : target.removeAttribute(attr)));\n            def('on', (type, listener, capture) => rts(target.addEventListener(type, listener, capture)));\n            def('toDom', () => {\n                let root = self.target();\n                for (let e in self) {\n                    if (!self.hasOwnProperty(e)) continue;\n                    if (!e instanceof $) continue;\n                    try {\n                        root.appendChild(self[e].toDom())\n                    } catch (err) {\n                        console.log(e, err);\n                    }\n                }\n                return root;\n            });\n        };\n\n        /**\n         * @description \"virtual\" DOM element factory\n         * @param {String} [e] element type\n         * @param {String|Array<String>} [c] class/classes\n         */\n        const $touch = (e = 'div', c) => {\n            let d = new $(document.createElement(e));\n            if (c) d.addClass(c);\n            return d;\n        };\n\n        // Build the \"virtual\" widget\n        const widget = $touch('div', 'widget');\n        const head = widget.head = $touch('div', 'head');\n        head.logo = $touch('div', 'woleet-logo');\n        head.reset = $touch('div', ['reset', 'mini-button', 'clickable']).on('click', reset);\n        head.cancel = $touch('div', ['cancel', 'mini-button', 'clickable']).on('click', cancelHash);\n        const body = widget.body = $touch('div', 'body');\n\n        const hashZone = body.hashZone = $touch('div', 'hashZone');\n        hashZone.hashProgessContainer = $touch('div', 'progressBarContainer');\n        hashZone.percentage = $touch('span').text('Hashing... 0%');\n        const progressBar = hashZone.hashProgessContainer.progressBar = $touch('div', 'progressBar');\n\n        const infoZone = body.infoZone = $touch('div', 'infoZone');\n        infoZone.icon = $touch('div', 'infoStatus');\n        infoZone.mainTextZone = $touch('div', 'text');\n        infoZone.subTextZone = $touch('div', ['text', 'small']);\n        infoZone.signTextZone = $touch('div', ['text', 'x-small']);\n        infoZone.warnTextZone = $touch('div', ['text', 'x-small', 'warn']);\n\n        const dropZone = body.dropZone = $touch('div', 'dropZoneContainer');\n        dropZone.inputContainer = $touch('div');\n        dropZone.inputContainer.mainTextZone = $touch('div', 'text');\n        dropZone.inputContainer.subTextZone = $touch('div', ['text', 'small']);\n        dropZone.inputContainer.input = $touch('input', ['dropZone', 'clickable']).attr('type', 'file').on('change', setInputFile);\n\n        init();\n\n        // Simulate a drop if hash is provided\n        if (hash) setInputFile.call({files: [hash]});\n\n        function init() {\n            resetText();\n            dropZone.inputContainer.mainTextZone.text('Drop the file to verify');\n            infoZone.removeClass(['validated', 'error']);\n            infoZone.hide();\n            dropZone.show();\n            hashZone.hide();\n            head.reset.hide();\n            head.cancel.hide();\n        }\n\n        function resetText() {\n            dropZone.inputContainer.mainTextZone.text('');\n            dropZone.inputContainer.subTextZone.text('');\n            infoZone.mainTextZone.text('');\n            infoZone.subTextZone.text('');\n            infoZone.signTextZone.text('');\n            infoZone.warnTextZone.text('');\n        }\n\n        /**\n         * @param {Date} date\n         */\n        function formatDate(date) {\n            let day, month, year, hour, minutes;\n\n            day = date.getDate();\n            month = date.getMonth();\n            year = date.getFullYear();\n            hour = date.getHours();\n            minutes = date.getMinutes();\n\n            return [day, month + 1, year].join('/') + ' ' + [hour, minutes].join(':');\n        }\n\n        const hasher = new woleet.file.Hasher;\n\n        function setInputFile() {\n            let file = this.files[0];\n            if (!file) return;\n\n            // Reset input\n            //noinspection JSUnusedGlobalSymbols\n            this.value = null;\n\n            // Set default vue\n            if (state.state === 'done') setVue('init');\n\n            const setProgress = (e) => {\n                let p = (e.progress * 100);\n                if (Number.isNaN(p)) p = 0;\n                p = p.toFixed(0);\n                progressBar.style({width: p + '%'});\n                hashZone.percentage.text('Hashing... ' + p + '%')\n            };\n\n            // We need a receipt to verify the hash|file\n            if (state.state === 'needReceipt') {\n                setVue('pending');\n                parseReceiptFile(file)\n                    .then((receipt) => woleet.verify.DAB(state.hash, receipt, setProgress))\n                    .then((res) => {\n                        if (res.code !== 'verified') throw new Error(res.code);\n                        setVue('woleet-ok', res);\n                        state.state = 'done';\n                    })\n                    .catch((err) => {\n                        setVue('error', err);\n                    })\n            }\n\n            // We just entered a new hash|file to verify\n            else {\n\n                setVue('pending');\n\n                if (typeof file === 'string') {\n                    state.hash = file;\n                    woleetDAB(state.hash);\n                } else {\n                    hasher.start(file);\n                    hasher.on('progress', setProgress);\n                    hasher.on('result', (r) => {\n                        state.hash = r.result;\n                        woleetDAB(state.hash);\n                        setProgress({progress: 0});\n                    })\n                }\n\n                function woleetDAB(hash) {\n                    woleet.verify.WoleetDAB(hash, setProgress)\n                        .then((result) => {\n                            if (result.length) {\n                                state.state = 'done';\n                                const res = result[0];\n                                if (res.code !== 'verified') throw new Error(res.code);\n                                setVue('woleet-ok', res);\n                            }\n                            else throw new Error('need-receipt');\n                        })\n                        .catch((err) => {\n                            // As we use cross-domain, it is difficult to know where the error come from,\n                            // so we guess that the Woleet API isn't available and set state to need-receipt\n                            // if the error came from network\n                            console.log(err);\n                            if (err.hasOwnProperty('code') || err.message === 'need-receipt') {\n                                state.state = 'needReceipt';\n                                setVue('need-receipt');\n                            }\n                            else {\n                                setVue('error', err);\n                            }\n                        })\n                }\n            }\n        }\n\n        function getErrorMessage(err) {\n            if (err instanceof Error) {\n                err = err.message;\n            }\n            const detail = {};\n            switch (err) {\n                case 'need-receipt':\n                    detail.main = 'File unknown to Woleet';\n                    detail.sub = 'The receipt cannot be retreived from Woleet: you must provide it to verify this file';\n                    break;\n                case 'target_hash_mismatch':\n                    detail.main = 'The provided receipt is not meant for this file';\n                    detail.sub = 'The receipt\\'s target_hash attribute doesn\\'t match the file hash';\n                    break;\n                case 'unable_to_parse_json':\n                    detail.main = 'The provided receipt cannot be parsed';\n                    detail.sub = 'The file you provided doesn\\'t look like a receipt';\n                    break;\n                case 'merkle_root_mismatch':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'The receipt\\'s merkle_root attribute does not match the proof result';\n                    break;\n                case 'non_sha256_target_proof_element':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'An attribute in the proof (parent or left or right) in not a SHA256 hash';\n                    break;\n                case 'invalid_parent_in_proof_element':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'A parent in the proof does not match SHA256(left+right).';\n                    break;\n                case 'invalid_receipt_format':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'The proof miss an attribute (parent or left or right).';\n                    break;\n                case 'invalid_target_proof':\n                    detail.main = 'The provided receipt seems corrupted';\n                    detail.sub = 'The receipt does not conform to the Chainpoint 1.x format';\n                    break;\n                case 'tx_not_found':\n                    detail.main = 'Transaction not found';\n                    detail.sub = 'The transaction targeted by the receipt cannot be found';\n                    break;\n                case 'invalid_receipt_signature':\n                    detail.main = 'Invalid receipt signature';\n                    detail.sub = 'The provided receipt is packed with a signature field witch is invalid';\n                    break;\n                case 'error_while_getting_transaction':\n                    detail.main = 'Cannot get transaction';\n                    detail.sub = 'There was an error while getting the transaction (try again)';\n                    break;\n                case '':\n                    console.trace('undefined');\n                    break;\n                default:\n                    console.trace('unexpected case', err);\n                    detail.main = err;\n                    detail.sub = 'unexpected case';\n                    break;\n            }\n            return detail;\n        }\n\n        function setVue(vue, message) {\n            switch (vue) {\n                case 'woleet-ok':\n                    resetText();\n                    infoZone.show();\n                    dropZone.hide();\n                    hashZone.hide();\n                    head.cancel.hide();\n                    console.log(message);\n                    const s = message.receipt.signature;\n                    const i = message.identityVerificationStatus;\n                    const pubKey = s ? s.pubKey : null;\n                    const signee = (s && s.identityURL && i && i.code === 'verified') ? s.identityURL : pubKey;\n                    const date = formatDate(message.timestamp).split(' ');\n                    const timeZone = /.*(GMT.*\\)).*/.exec(message.timestamp.toString())[1];\n                    infoZone.mainTextZone.text(`${pubKey ? 'Signed' : 'Timestamped'} on ${date[0]}`);\n                    infoZone.subTextZone.text('at ' + date[1] + ' ' + timeZone);\n                    infoZone.signTextZone.text(pubKey ? `by ${signee}` : '');\n                    if(i && i.code && i.code !== 'verified') {\n                        infoZone.warnTextZone.text(`Cannot validate identity (${i.code})`)\n                    }\n                    infoZone.addClass('validated');\n                    dropZone.attr('disabled', true);\n                    head.reset.show();\n                    break;\n                case 'need-receipt':\n                    resetText();\n                    infoZone.hide();\n                    dropZone.show();\n                    hashZone.hide();\n                    head.cancel.hide();\n                    dropZone.inputContainer.mainTextZone.text('File unknown to Woleet');\n                    dropZone.inputContainer.subTextZone.text('Drop it\\'s receipt');\n                    head.reset.show();\n                    break;\n                case 'error':\n                    resetText();\n                    infoZone.show();\n                    dropZone.hide();\n                    hashZone.hide();\n                    head.cancel.hide();\n                    let detail = getErrorMessage(message);\n                    infoZone.mainTextZone.text(detail.main);\n                    infoZone.subTextZone.text(detail.sub);\n                    infoZone.addClass('error');\n                    head.reset.show();\n                    break;\n                case 'pending':\n                    resetText();\n                    head.cancel.show();\n                    infoZone.hide();\n                    dropZone.hide();\n                    hashZone.show();\n                    break;\n                case 'init':\n                default:\n                    init();\n                    break;\n            }\n        }\n\n        function parseReceiptFile(receipt) {\n            return new Promise((resolve, reject) => {\n                let reader = new FileReader();\n                reader.onloadend = (e) => {\n                    try {\n                        //noinspection JSUnresolvedVariable\n                        resolve(JSON.parse(e.target.result));\n                    } catch (err) {\n                        reject(new Error('unable_to_parse_json'));\n                    }\n                };\n                reader.readAsText(receipt);\n            });\n        }\n\n        function reset() {\n            setVue('init');\n            state.hash = null;\n            state.state = 'initial'\n        }\n\n        function cancelHash() {\n            hasher.cancel();\n            reset();\n        }\n\n        return widget.toDom()\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        let widgets = document.getElementsByClassName(\"woleet-widget\");\n        for (let i = 0; i < widgets.length; i++) {\n            let e = widgets[i];\n            let hash = e.getAttribute(\"data-hash\");\n            e.appendChild(new Widget(hash));\n        }\n    });\n\n    root.Widget = Widget;\n\n}(window));"]}