{"version":3,"sources":["woleet-widget.js"],"names":["root","Widget","hash","params","content","info","dropZone","buttonBox","button","tooltip","textZone","$touch","message","text","mainTextZone","show","subTextZone","hide","inputContainer","progressBarContainer","progressBar","formatDate","setInputFile","day","month","year","hour","minutes","date","getDate","init","getMonth","removeClass","join","head","reset","file","this","files","value","state","setVue","DAB","receipt","e","style","width","progress","getFullYear","res","confirmedOn","getHours","catch","err","retry","transaction","setDefaultProvider","call","console","trace","WoleetDAB","length","woleet","hasOwnProperty","Error","vue","tip","setTooltip","parseError","error","addClass","icon","split","parseReceiptFile","resolve","reject","reader","FileReader","onloadend","readAsText","Promise","_typeof","$","domElement","_this","_target","target","Array","isArray","forEach","classList","remove","add","innerText","props","map","p","propName","attr","val","setAttribute","removeAttribute","on","type","listener","addEventListener","capture","iniProps","indexOf","appendChild","toDom","arguments","undefined","d","document","createElement","widget","logo","body","c","input","widgets","getElementsByClassName","i","getAttribute"],"mappings":"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","file":"woleet-widget.min.js","sourcesContent":["(function (root) {\n    /**\n     * @param [hash]\n     * @param [params]\n     * @constructor\n     */\n    function Widget(hash, params) {\n\n        // Parsing parameters\n        if (!params && hash && typeof hash == 'object') {\n            params = hash;\n            hash = null;\n        }\n        else if (hash && typeof hash != 'string') throw new Error('Invalid parameter type');\n        //\n\n        // state relative variables\n        const state = {\n            state: 'initial',\n            hash: null,\n            retry: false\n        };\n        //\n\n        /**\n         * @description \"virtual\" DOM element Object\n         * @param domElement\n         */\n        const $ = function (domElement) {\n            let _target = domElement;\n            this.target = () => _target;\n\n            this.removeClass = (e) => {\n                Array.isArray(e) ? e.forEach(e => _target.classList.remove(e)) : _target.classList.remove(e);\n                return this;\n            };\n\n            this.addClass = (e) => {\n                Array.isArray(e) ? e.forEach(e => _target.classList.add(e)) : _target.classList.add(e);\n                return this;\n            };\n\n            this.text = (text, add) => {\n                add ? _target.innerText += text : _target.innerText = text;\n                return this;\n            };\n\n            this.show = () => this.removeClass('hidden');\n\n            this.hide = () => this.addClass('hidden');\n\n            this.style = (props) => {\n                if (Array.isArray(props)) {\n                    return props.map((p) => _target.style[p])\n                }\n                else if (typeof props == 'string') return _target.style[props];\n                else {\n                    for (let propName in props) {\n                        //noinspection JSUnfilteredForInLoop\n                        _target.style[propName] = props[propName];\n                    }\n                }\n            };\n\n            this.attr = (attr, val) => {\n                val ? _target.setAttribute(attr, val) : _target.removeAttribute(attr);\n                return this;\n            };\n\n            this.on = (type, listener, capture) => {\n                _target.addEventListener(type, listener, capture);\n                return this;\n            };\n\n            this.toDom = () => {\n                const iniProps = ['target', 'text', 'show', 'hide', 'toDom', 'addClass', 'removeClass', 'attr', 'on', 'style'];\n                let root = this.target();\n                for (let e in this) {\n                    if (!this.hasOwnProperty(e)) continue;\n                    if (iniProps.indexOf(e) != -1) continue;\n                    if (!e instanceof $) continue;\n                    try {\n                        root.appendChild(this[e].toDom())\n                    } catch (err) {\n                        console.log(e, err);\n                    }\n                }\n                return root;\n            }\n        };\n\n        /**\n         * @description \"virtual\" DOM element factory\n         * @param {String} [e] element type\n         * @param {String|Array<String>} [c] class/classes\n         * @returns $\n         */\n        const $touch = (e = 'div', c) => {\n            let d = new $(document.createElement(e));\n            if (c) d.addClass(c);\n            return d;\n        };\n\n        // Building the \"virtual\" widget\n        const widget = $touch('div', 'widget');\n        const head = widget.head = $touch('div', 'head');\n        head.logo = $touch('div', 'woleet-logo');\n        head.reset = $touch('div', ['reset-button', 'clickable']).on('click', reset);\n        widget.body = $touch();\n        const content = widget.body.content = $touch();\n        content.icon = $touch('div', 'infoStatus');\n        content.info = $touch('div', 'infoBox');\n        content.info.message = $touch('div', 'messageBox');\n        content.info.message.buttonBox = $touch('div', 'buttonBox');\n        content.info.message.buttonBox.button = $touch('div', ['info', 'tooltip', 'clickable']);\n        content.info.message.buttonBox.button.tooltip = $touch('span', ['tooltiptext']);\n        content.info.message.textZone = $touch('div', 'text');\n        content.dropZone = $touch('div', 'dropZoneContainer');\n        content.dropZone.mainTextZone = $touch('div', 'text');\n        content.dropZone.subTextZone = $touch('div', ['text', 'little']);\n        content.dropZone.inputContainer = $touch('div', 'subContainer');\n        content.dropZone.inputContainer.progressBarContainer = $touch('div').hide();\n        const progressBar = content.dropZone.inputContainer.progressBarContainer.progressBar = $touch('div', 'progressBar');\n        content.dropZone.inputContainer.input = $touch('input', ['dropZone', 'clickable']).attr('type', 'file').on('change', setInputFile);\n\n        init();\n\n        //Calling setInputFile with {files: ...} as this\n        if (hash) setInputFile.call({files: [hash]});\n\n        //CTRL\n\n        function init() {\n            content.dropZone.mainTextZone.text('Drop the file to verify');\n            content.dropZone.subTextZone.text('');\n            content.info.message.buttonBox.button.tooltip.text('');\n            content.dropZone.addClass('expanded').show();\n            content.info.removeClass(['reduced', 'expanded']).hide();\n            content.icon.removeClass(['validated', 'error']).hide();\n            content.dropZone.inputContainer.progressBarContainer.hide();\n            head.reset.hide();\n        }\n\n        /**\n         * @param {Date} date\n         */\n        function formatDate(date) {\n            let day, month, year, hour, minutes;\n\n            day = date.getDate();\n            month = date.getMonth();\n            year = date.getFullYear();\n            hour = date.getHours();\n            minutes = date.getMinutes();\n\n            return [day, month + 1, year].join('/') + ' ' + [hour, minutes].join(':');\n        }\n\n        function setInputFile() {\n            let file = this.files[0];\n            if (!file) return;\n            //noinspection JSUnusedGlobalSymbols\n            this.value = null; // Reset input\n            if (state.state == 'done') setVue();\n            // if we already checked a hash|file but need a receipt to verify it\n            if (state.state == 'needReceipt') {\n                setVue('pending');\n                parseReceiptFile(file)\n                    .then((receipt) =>\n                        woleet.verify.DAB(state.hash, receipt, (e) => {\n                            progressBar.style({width: e.progress * 100 + '%'})\n                        }))\n                    .then((res) => {\n                        setVue('woleet-ok', formatDate(res.confirmedOn));\n                        state.state = 'done';\n                    })\n                    .catch((err) => {\n                        // as we use cross-domain, it is difficult ot know where the error come from,\n                        // so we try once with an other provider\n                        if (err.message == 'error_while_getting_transaction' && state.retry == false) {\n                            state.retry = true;\n                            woleet.transaction.setDefaultProvider(\"blockcypher.com\");\n                            setInputFile.call({files: [file]}); // self-calling, binding with current receipt file\n                        }\n                        else {\n                            console.trace(err);\n                            setVue('error', err);\n                        }\n                    })\n            }\n            // we just entered a new hash|file to verify\n            else {\n                state.hash = file;\n                setVue('pending');\n                woleet.verify.WoleetDAB(file, (e) => {\n                    progressBar.style({width: e.progress * 100 + '%'});\n                }).then((res) => {\n                    if (res.length) {\n                        state.state = 'done';\n                        setVue('woleet-ok', formatDate(res[0].confirmedOn));\n                    }\n                    else throw new Error('need-receipt');\n                }).catch((err) => {\n                    // as we use cross-domain, it is difficult to know where the error come from,\n                    // so we guess that the woleet api isn't available and set state to need-receipt\n                    // if the error came from network\n                    if (err.hasOwnProperty('code') || err.message == 'need-receipt') {\n                        state.state = 'needReceipt';\n                        setVue('need-receipt', 'Drop its receipt');\n                    }\n                    else {\n                        setVue('error', err);\n                    }\n                })\n            }\n        }\n\n        function setTooltip(vue) {\n            let tip = content.info.message.buttonBox.button.tooltip;\n            let info = content.info.message.textZone;\n            switch (vue) {\n                case 'need-receipt':\n                    info.text('File unknown to Woleet');\n                    tip.text('The receipt cannot be retreived from Woleet: you must provide it to verify this file');\n                    break;\n                case 'target_hash_mismatch':\n                    info.text('The provided receipt is not meant for this file');\n                    tip.text('The receipt\\'s target_hash attribute doesn\\'t match the file hash');\n                    break;\n                case 'unable_to_parse_json':\n                    info.text('The provided receipt cannot be parsed');\n                    tip.text('The file you provided doesn\\'t look like a receipt');\n                    break;\n                case 'merkle_root_mismatch':\n                    info.text('The provided receipt seems corrupted');\n                    tip.text('The receipt\\'s merkle_root attribute does not match the proof result');\n                    break;\n                case 'non_sha256_target_proof_element':\n                    info.text('The provided receipt seems corrupted');\n                    tip.text('An attribute in the proof (parent or left or right) in not a SHA256 hash');\n                    break;\n                case 'invalid_parent_in_proof_element':\n                    info.text('The provided receipt seems corrupted');\n                    tip.text('A parent in the proof does not match SHA256(left+right).');\n                    break;\n                case 'invalid_receipt_format':\n                    info.text('The provided receipt seems corrupted');\n                    tip.text('The proof miss an attribute (parent or left or right).');\n                    break;\n                case 'invalid_target_proof':\n                    info.text('The provided receipt seems corrupted');\n                    tip.text('The receipt does not conform to the Chainpoint 1.x format');\n                    break;\n                case 'tx_not_found':\n                    info.text('Transaction not found');\n                    tip.text('The transaction targeted by the receipt cannot be found');\n                    break;\n                case 'error_while_getting_transaction':\n                    info.text('Cannot get transaction');\n                    tip.text('There was an error while getting the transaction (try again)');\n                    break;\n                default:\n                    info.text(vue);\n                    tip.text('unexpected case');\n                    break;\n            }\n        }\n\n        // same role as setVue, but error-specific\n        function parseError(error) {\n            console.error(error.message);\n            let message = error.message || \"Something bad happened\";\n            content.info.removeClass('reduced').addClass('expanded').show();\n            content.dropZone.inputContainer.progressBarContainer.hide();\n            content.icon.addClass('error').show();\n            content.dropZone.removeClass('expanded').hide();\n            head.reset.show();\n            setTooltip(message);\n        }\n\n        function setVue(vue, message) {\n            switch (vue) {\n                case 'woleet-ok':\n                case 'receipt-ok':\n                    content.icon.show();\n                    let date = message.split(' ');\n                    content.dropZone.mainTextZone.text(date[0]);\n                    content.dropZone.subTextZone.text(date[1]);\n                    content.dropZone.removeClass('expanded');\n                    content.icon.addClass('validated');\n                    content.info.removeClass('reduced').hide();\n                    content.dropZone.inputContainer.progressBarContainer.hide();\n                    content.dropZone.attr('disabled', true);\n                    setTooltip('');\n                    break;\n                case 'need-receipt':\n                    content.dropZone.mainTextZone.text(message);\n                    content.dropZone.removeClass('expanded');\n                    content.info.message.textZone.text('need receipt');\n                    content.info.addClass('reduced').show();\n                    content.dropZone.inputContainer.progressBarContainer.hide();\n                    head.reset.show();\n                    setTooltip('need-receipt');\n                    break;\n                case 'receipt-ko':\n                case 'error':\n                    parseError(message);\n                    break;\n                case 'pending':\n                    content.info.hide();\n                    content.icon.hide();\n                    content.dropZone.mainTextZone.text('Hashing...');\n                    content.dropZone.inputContainer.progressBarContainer.show();\n                    setTooltip('');\n                    break;\n                case 'init':\n                default:\n                    init();\n                    break;\n            }\n        }\n\n        function parseReceiptFile(receipt) {\n            return new Promise(function (resolve, reject) {\n                let reader = new FileReader();\n                reader.onloadend = function (e) {\n                    try {\n                        //noinspection JSUnresolvedVariable\n                        resolve(JSON.parse(e.target.result));\n                    } catch (err) {\n                        reject(new Error('unable_to_parse_json'));\n                    }\n                };\n                reader.readAsText(receipt);\n            });\n        }\n\n        function reset() {\n            setVue('init');\n            state.retry = false;\n            state.hash = null;\n            state.state = 'initial'\n        }\n\n        return widget.toDom()\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        let widgets = document.getElementsByClassName(\"woleet-widget\");\n        for (let i = 0; i < widgets.length; i++) {\n            let e = widgets[i];\n            let hash = e.getAttribute(\"data-hash\");\n            e.appendChild(new Widget(hash));\n        }\n    });\n\n    root.Widget = Widget;\n}(window));"]}